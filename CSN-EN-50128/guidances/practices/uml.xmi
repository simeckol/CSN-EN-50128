<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:PracticeDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-XIy-pujG82wpG-VeuAJJlQ" name="new_practice,_Ru-vgJ5WEempu9k_SdMtDQ" guid="-XIy-pujG82wpG-VeuAJJlQ" changeDate="2019-07-04T14:22:04.022+0200">
  <mainDescription>&lt;p>&#xD;
    &lt;strong>Popis&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    UML je standardizovaný obecně-účelový modelový jazyk, zrozený z použití graficky orientovaných softwarových&#xD;
    specifikačních jazyků a objektově-orientovaných programovacích jazyků. Stavíc na této tradici, UML znovu používá mnoho&#xD;
    z konceptů a metod svých předchůdců. Modely jsou psány ve výrazech jednoho nebo více typů diagramů, klasifikovány jako&#xD;
    strukturové diagramy a diagramy chování, posledně jmenované také zahrnují čtyři&lt;br />&#xD;
    typy diagramů klasifikované jako interakční diagramy.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Strukturové diagramy&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Balíčkové diagramy (package diagrams): ukazují obsah a vztahy mezi různými balíčky, každý obsahuje související&#xD;
        modelové elementy.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagramy tříd (class diagrams): specifikují typy objektů s jejich rozdílnými rysy a jejich vztahy s ostatními typy&#xD;
        objektů, založené na adaptaci tradičních diagramů vztahů entit.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Objektové diagramy (object diagrams): ukazují jak různé objekty (příkaldy tříd) souvisejí jeden s druhým.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Složené strukturové diagramy (composite structure diagrams): ukazují vnitřní strukturu klasifikátoru (jako třídy&#xD;
        nebo komponenty) a jeho body interakce s jinými částmi systému.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagramy komponent (component diagrams): ukazují komponenty které tvoří systém, jejich vzájemné vztahy, interakce a&#xD;
        externí rozhraní.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagramy nasazení (deployment diagrams): specifikují jak je software rozdělený napříč implementační platformu.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Diagramy chování&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Diagramy činnosti (activity diagrams): popisují algoritmické chování s využitím adptovaných tradičních vývojových&#xD;
        diagramů, které dovolují modelování datových přenosů a současné provádění.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagramy automatu stavů (state machine diagram): popisují událostí řízené chování prostředky automatu konečných&#xD;
        stavů (stavové grafy – statecharts).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagramy testovacích případů (use case diagrams): modeloví herci ovlivňují systém pro dosažení konkrétních&#xD;
        testovacích případů.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interakční diagramy (interaction diagrams) (komunikační diagramy, přehledové diagramy interakcí, sekvenční&#xD;
        diagramy, časové diagramy): popisují scénáře obsahující činnosti prováděné komunikujícími objekty.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Zatímco UML je obecný modelový jazyk, doménově specifické interpretace jsou umožněny prostřednictvím profilů.&#xD;
    Zlepšováním standardních UML konceptů umožňují profily vytvořit takové interpretace použitím rozšíření definovaných v&#xD;
    profilu. Tímto způsobem je UML používáno jako základ pro definování doménově specifických jazyků.&#xD;
&lt;/p></mainDescription>
  <goals>&lt;p>&#xD;
    &lt;strong>Cíl&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Reprezentovat softwarové programy a související artefakty způsobem, který dovoluje redukci složitosti pomocí abstrakce.&#xD;
    Umožněním modelování existujícího nebo plánovaného návrhu ve smyslu různých typů diagramu, UML usnadňuje odhad&#xD;
    klíčových charakteristik návrhu na základě reprezentací na přiměřené úrovni detailů. UML je často používáno v takzvaném&#xD;
    modelem-řízeném vývoji a je podporováno komerčními produkty. Tento vývojový styl se zaměřuje na zlepšení kvality&#xD;
    softwaru a produktivity návrhářů použitím vysokoúrovňových modelových jazyků.&#xD;
&lt;/p></goals>
</org.eclipse.epf.uma:PracticeDescription>
